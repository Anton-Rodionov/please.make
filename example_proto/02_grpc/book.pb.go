// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example_proto/02-grpc/book.proto

package book

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_0922655ced2c40f0, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Book struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Book) Reset()         { *m = Book{} }
func (m *Book) String() string { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()    {}
func (*Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_0922655ced2c40f0, []int{1}
}

func (m *Book) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Book.Unmarshal(m, b)
}
func (m *Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Book.Marshal(b, m, deterministic)
}
func (m *Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Book.Merge(m, src)
}
func (m *Book) XXX_Size() int {
	return xxx_messageInfo_Book.Size(m)
}
func (m *Book) XXX_DiscardUnknown() {
	xxx_messageInfo_Book.DiscardUnknown(m)
}

var xxx_messageInfo_Book proto.InternalMessageInfo

func (m *Book) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Book) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*Book)(nil), "Book")
}

func init() { proto.RegisterFile("example_proto/02-grpc/book.proto", fileDescriptor_0922655ced2c40f0) }

var fileDescriptor_0922655ced2c40f0 = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4d, 0x4e, 0x4e, 0x29,
	0x8e, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x37, 0x30, 0xd2, 0x4d, 0x2f, 0x2a, 0x48, 0xd6, 0x4f,
	0xca, 0xcf, 0xcf, 0xd6, 0x03, 0x0b, 0x29, 0xb1, 0x73, 0xb1, 0xba, 0xe6, 0x16, 0x94, 0x54, 0x2a,
	0x69, 0x71, 0xb1, 0x38, 0xe5, 0xe7, 0x67, 0x0b, 0xf1, 0x71, 0x31, 0x65, 0xa6, 0x48, 0x30, 0x2a,
	0x30, 0x6a, 0x70, 0x06, 0x31, 0x65, 0xa6, 0x08, 0x09, 0x71, 0xb1, 0xe4, 0x25, 0xe6, 0xa6, 0x4a,
	0x30, 0x81, 0x45, 0xc0, 0x6c, 0x23, 0x5d, 0x2e, 0x6e, 0x90, 0xda, 0xe0, 0xd4, 0xa2, 0xcc, 0xb2,
	0xe4, 0x54, 0x21, 0x39, 0x2e, 0x4e, 0x9f, 0xcc, 0xe2, 0x12, 0x90, 0x50, 0xb1, 0x10, 0x9b, 0x1e,
	0xd8, 0x3c, 0x29, 0x56, 0x3d, 0x10, 0x5f, 0x89, 0xc1, 0x80, 0x31, 0x89, 0x0d, 0x6c, 0x95, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xed, 0x3c, 0xb3, 0x8b, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BookSerivceClient is the client API for BookSerivce service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BookSerivceClient interface {
	ListBooks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (BookSerivce_ListBooksClient, error)
}

type bookSerivceClient struct {
	cc *grpc.ClientConn
}

func NewBookSerivceClient(cc *grpc.ClientConn) BookSerivceClient {
	return &bookSerivceClient{cc}
}

func (c *bookSerivceClient) ListBooks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (BookSerivce_ListBooksClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BookSerivce_serviceDesc.Streams[0], "/BookSerivce/ListBooks", opts...)
	if err != nil {
		return nil, err
	}
	x := &bookSerivceListBooksClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BookSerivce_ListBooksClient interface {
	Recv() (*Book, error)
	grpc.ClientStream
}

type bookSerivceListBooksClient struct {
	grpc.ClientStream
}

func (x *bookSerivceListBooksClient) Recv() (*Book, error) {
	m := new(Book)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BookSerivceServer is the server API for BookSerivce service.
type BookSerivceServer interface {
	ListBooks(*Empty, BookSerivce_ListBooksServer) error
}

func RegisterBookSerivceServer(s *grpc.Server, srv BookSerivceServer) {
	s.RegisterService(&_BookSerivce_serviceDesc, srv)
}

func _BookSerivce_ListBooks_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BookSerivceServer).ListBooks(m, &bookSerivceListBooksServer{stream})
}

type BookSerivce_ListBooksServer interface {
	Send(*Book) error
	grpc.ServerStream
}

type bookSerivceListBooksServer struct {
	grpc.ServerStream
}

func (x *bookSerivceListBooksServer) Send(m *Book) error {
	return x.ServerStream.SendMsg(m)
}

var _BookSerivce_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BookSerivce",
	HandlerType: (*BookSerivceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListBooks",
			Handler:       _BookSerivce_ListBooks_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "example_proto/02-grpc/book.proto",
}
